name: Code Quality Check

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

permissions:
  contents: read

jobs:
  format:
    name: Format Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Go
        uses: actions/setup-go@v6
        with:
          go-version: 1.25.1

      - name: Check gofmt
        run: |
          if [ "$(gofmt -l . | wc -l)" -gt 0 ]; then
            echo "Code is not formatted with gofmt:"
            gofmt -l .
            exit 1
          fi

  vet:
    name: Go Vet
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Go
        uses: actions/setup-go@v6
        with:
          go-version: 1.25.1

      - name: Run go vet
        run: go vet ./...

  lint:
    name: Linting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Go
        uses: actions/setup-go@v6
        with:
          go-version: 1.25.1

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: latest
          args: --timeout=3m

  security:
    name: Security Scanner
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Run Security Scanner
        uses: securego/gosec@master
        with:
          args: -exclude-dir=.git -exclude-dir=vendor ./...
